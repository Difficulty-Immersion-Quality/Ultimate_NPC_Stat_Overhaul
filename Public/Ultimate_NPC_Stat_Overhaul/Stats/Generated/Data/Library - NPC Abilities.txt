// ==================================== Barbarian - Rage ====================================
// In the progressions the original rage is removed and replaced with "Shout_Rage_Frenzy". We can replicate this via "CombatAIOverrideSpell", to force the AI to use the coolest Rage they have. We also prevent them from rage spamming, by checking if they already have an active rage. This is important when using mods such as "Dynamic Wildheart Barbarian" by Armarui.

// Basic Rage
new entry "Shout_Rage"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage"
data "CombatAIOverrideSpell" "Shout_Rage_AI"

new entry "Shout_Rage_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage"
// data "CombatAIOverrideSpell" "Shout_Rage_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('RAGE') and not HasStatus('CALM_EMOTIONS') and not HasPassive('RageFrenzyUnlock') and not HasPassive('WildMagicRage') and not HasPassive('TotemSpirit_Bear') and not HasPassive('TotemSpirit_Eagle') and not HasPassive('TotemSpirit_Elk') and not HasPassive('TotemSpirit_Tiger') and not HasPassive('TotemSpirit_Wolf')"

// Berserker
new entry "Shout_Rage_Frenzy"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Frenzy"
data "CombatAIOverrideSpell" "Shout_Rage_Frenzy_AI"

new entry "Shout_Rage_Frenzy_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Frenzy"
// data "CombatAIOverrideSpell" "Shout_Rage_Frenzy_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE_FRENZY') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// Wild Magic
new entry "Shout_Rage_WildMagic"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_WildMagic"
data "CombatAIOverrideSpell" "Shout_Rage_WildMagic_AI"

new entry "Shout_Rage_WildMagic_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_WildMagic"
// data "CombatAIOverrideSpell" "Shout_Rage_WildMagic_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// Wildheart - Bear
new entry "Shout_Rage_Totem_Bear"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Bear"
data "CombatAIOverrideSpell" "Shout_Rage_Totem_Bear_AI"

new entry "Shout_Rage_Totem_Bear_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Bear"
// data "CombatAIOverrideSpell" "Shout_Rage_Totem_Bear_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE_TOTEM_BEAR') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// Wildheart - Eagle
new entry "Shout_Rage_Totem_Eagle"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Eagle"
data "CombatAIOverrideSpell" "Shout_Rage_Totem_Eagle_AI"

new entry "Shout_Rage_Totem_Eagle_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Eagle"
// data "CombatAIOverrideSpell" "Shout_Rage_Totem_Eagle_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE_TOTEM_EAGLE') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// Wildheart - Elf
new entry "Shout_Rage_Totem_Elk"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Elk"
data "CombatAIOverrideSpell" "Shout_Rage_Totem_Elk_AI"

new entry "Shout_Rage_Totem_Elk_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Elk"
// data "CombatAIOverrideSpell" "Shout_Rage_Totem_Elk_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE_TOTEM_ELK') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// Wildheart - Tiger
new entry "Shout_Rage_Totem_Tiger"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Tiger"
data "CombatAIOverrideSpell" "Shout_Rage_Totem_Tiger_AI"

new entry "Shout_Rage_Totem_Tiger_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Tiger"
// data "CombatAIOverrideSpell" "Shout_Rage_Totem_Tiger_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE_TOTEM_TIGER') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// Wildheart - Wolf
new entry "Shout_Rage_Totem_Wolf"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Wolf"
data "CombatAIOverrideSpell" "Shout_Rage_Totem_Wolf_AI"

new entry "Shout_Rage_Totem_Wolf_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_Rage_Totem_Wolf"
// data "CombatAIOverrideSpell" "Shout_Rage_Totem_Wolf_AI"
data "CombatAIOverrideSpell" ""
// data "RequirementConditions" "not HasStatus('RAGE_TOTEM_WOLF') and not HasStatus('CALM_EMOTIONS')"
data "RequirementConditions" "not HasStatus('SG_Rage') and not HasStatus('CALM_EMOTIONS')"

// ==================================== Barbarian - Intimidating Presence ====================================

// Giving Intimidating Presence a bonus action cost (since it's not worth the action) and per battle cooldown (so NPCs don't just spam it)
new entry "Target_IntimidatingPresence"
type "SpellData"
data "SpellType" "Target"
using "Target_IntimidatingPresence"
data "CombatAIOverrideSpell" "Target_IntimidatingPresence_AI"

new entry "Target_IntimidatingPresence_AI"
type "SpellData"
data "SpellType" "Target"
using "Target_IntimidatingPresence"
// data "CombatAIOverrideSpell" "Target_IntimidatingPresence_AI"
data "CombatAIOverrideSpell" ""
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"
data "Cooldown" "OncePerCombat"

new entry "Target_IntimidatingPresence_Maintain"
type "SpellData"
data "SpellType" "Target"
// using "Target_IntimidatingPresence"
using "Target_IntimidatingPresence_Maintain"
data "CombatAIOverrideSpell" "Target_IntimidatingPresence_Maintain_AI"

new entry "Target_IntimidatingPresence_Maintain_AI"
type "SpellData"
data "SpellType" "Target"
using "Target_IntimidatingPresence_Maintain"
// data "CombatAIOverrideSpell" "Target_IntimidatingPresence_Maintain_AI"
data "CombatAIOverrideSpell" ""
// data "UseCosts" "ActionPoint:1"
data "UseCosts" "BonusActionPoint:1"
data "Cooldown" "OncePerCombat"

// ==================================== Bard - Bardic Inspiration ====================================

new entry "Target_BardicInspiration"
type "SpellData"
data "SpellType" "Target"
using "Target_BardicInspiration"
data "CombatAIOverrideSpell" "Target_BardicInspiration_AI"

new entry "Target_BardicInspiration_AI"
type "SpellData"
data "SpellType" "Shout"
using "Target_BardicInspiration"
// data "CombatAIOverrideSpell" "Target_BardicInspiration_AI"
data "CombatAIOverrideSpell" ""
data "RequirementConditions" "not HasPassive('CombatInspiration')"

// ==================================== Druid - Fungal Infestation resource passives ====================================

new entry "ARP_FungalInfestation_1_1"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnCreate"
data "StatsFunctors" "ApplyStatus(SELF,ARP_FUNGAL_INFESTATION_1_1,100,-1)"

new entry "ARP_FungalInfestation_1_2"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnCreate"
data "StatsFunctors" "ApplyStatus(SELF,ARP_FUNGAL_INFESTATION_2_1,100,-1)"

new entry "ARP_FungalInfestation_1_3"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnCreate"
data "StatsFunctors" "ApplyStatus(SELF,ARP_FUNGAL_INFESTATION_3_1,100,-1)"

new entry "ARP_FungalInfestation_1_4"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnCreate"
data "StatsFunctors" "ApplyStatus(SELF,ARP_FUNGAL_INFESTATION_4_1,100,-1)"

new entry "ARP_FungalInfestation_1_5"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnCreate"
data "StatsFunctors" "ApplyStatus(SELF,ARP_FUNGAL_INFESTATION_5_1,100,-1)"

new entry "ARP_FUNGAL_INFESTATION_1_1"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "ARP_FUNGAL_INFESTATION_1_1"
data "StackType" "Ignore"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
data "Boosts" "ActionResource(FungalInfestationCharge,1,1)"
data "RemoveConditions" "not HasPassive('ARP_FungalInfestation_1_1')"
data "RemoveEvents" "OnTurn;OnStatusApplied;OnStatusRemoved"

new entry "ARP_FUNGAL_INFESTATION_2_1"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "ARP_FUNGAL_INFESTATION_2_1"
data "StackType" "Ignore"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
data "Boosts" "ActionResource(FungalInfestationCharge,2,1)"
data "RemoveConditions" "not HasPassive('ARP_FungalInfestation_1_2')"
data "RemoveEvents" "OnTurn;OnStatusApplied;OnStatusRemoved"

new entry "ARP_FUNGAL_INFESTATION_3_1"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "ARP_FUNGAL_INFESTATION_3_1"
data "StackType" "Ignore"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
data "Boosts" "ActionResource(FungalInfestationCharge,3,1)"
data "RemoveConditions" "not HasPassive('ARP_FungalInfestation_1_3')"
data "RemoveEvents" "OnTurn;OnStatusApplied;OnStatusRemoved"

new entry "ARP_FUNGAL_INFESTATION_4_1"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "ARP_FUNGAL_INFESTATION_4_1"
data "StackType" "Ignore"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
data "Boosts" "ActionResource(FungalInfestationCharge,4,1)"
data "RemoveConditions" "not HasPassive('ARP_FungalInfestation_1_4')"
data "RemoveEvents" "OnTurn;OnStatusApplied;OnStatusRemoved"

new entry "ARP_FUNGAL_INFESTATION_5_1"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "ARP_FUNGAL_INFESTATION_5_1"
data "StackType" "Ignore"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
data "Boosts" "ActionResource(FungalInfestationCharge,5,1)"
data "RemoveConditions" "not HasPassive('ARP_FungalInfestation_1_5')"
data "RemoveEvents" "OnTurn;OnStatusApplied;OnStatusRemoved"

// ==================================== Druid - Eldritch Knight Bound Weapon ====================================

new entry "Shout_WeaponBond"
type "SpellData"
data "SpellType" "Shout"
using "Shout_WeaponBond"
data "CombatAIOverrideSpell" "Shout_WeaponBond_AI"

new entry "Shout_WeaponBond_AI"
type "SpellData"
data "SpellType" "Shout"
using "Shout_WeaponBond"
// data "CombatAIOverrideSpell" "Shout_WeaponBond_AI"
data "CombatAIOverrideSpell" ""
// data "UseCosts" "ActionPoint:1"
data "UseCosts" ""
// data "Requirements" "!Combat"
data "Requirements" "not HasStatus('WEAPON_BOND',GetActiveWeapon())"